{"version":3,"sources":["../src/config.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEM,SAAU,kBAAV,CAA6B,UAA7B,EAA+C;AACnD,SAAO,KAAI,eAAJ,EAAS,MAAM,kCAAqB,0BAAS,IAAI,CAAC,IAAL,CAAU,UAAV,EAAsB,cAAtB,CAAT,CAArB,CAAf,CAAP;AACD;;;2CAOM,WAA+C,OAA/C,EAA4E;AACjF,UAAM,MAAM,GAAG,MAAM,iCAAU;AAC7B,MAAA,UAAU,EAAE,iBADiB;AAE7B,MAAA,cAAc,EAAE,kBAFa;AAG7B,MAAA,UAAU,EAAE,OAAO,CAAC,UAHS;AAI7B,MAAA,eAAe,EAAE,OAAO,CAAC;AAJI,KAAV,CAArB;AAMA,UAAM,aAAa,GAAiC,MAAM,IAAI,IAAV,IAAkB,MAAM,CAAC,MAAP,IAAiB,IAAnC,GAA0C,EAA1C,GAA+C,MAAM,CAAC,MAA1G;;AACA,QAAI,aAAa,CAAC,mBAAd,IAAqC,IAAzC,EAA+C;AAC7C,MAAA,aAAa,CAAC,mBAAd,GAAoC,MAApC;AACD;;AACD,QAAI,aAAa,CAAC,qBAAd,IAAuC,IAA3C,EAAiD;AAC/C,MAAA,aAAa,CAAC,qBAAd,GAAsC,YAAtC;AACD;;AACD,WAAO,aAAP;AACD,G;;kBAfqB,+B","sourcesContent":["import { readJson } from \"fs-extra-p\"\nimport { Lazy } from \"lazy-val\"\nimport * as path from \"path\"\nimport { getConfig } from \"read-config-file\"\nimport { ElectronWebpackConfiguration } from \"./core\"\nimport { orNullIfFileNotExist } from \"./util\"\n\nexport function getPackageMetadata(projectDir: string) {\n  return new Lazy(() => orNullIfFileNotExist(readJson(path.join(projectDir, \"package.json\"))))\n}\n\nexport interface ConfigurationRequest {\n  projectDir: string\n  packageMetadata: Lazy<{ [key: string]: any } | null> | null\n}\n\nexport async function getElectronWebpackConfiguration(context: ConfigurationRequest): Promise<ElectronWebpackConfiguration> {\n  const result = await getConfig({\n    packageKey: \"electronWebpack\",\n    configFilename: \"electron-webpack\",\n    projectDir: context.projectDir,\n    packageMetadata: context.packageMetadata\n  })\n  const configuration: ElectronWebpackConfiguration = result == null || result.result == null ? {} : result.result\n  if (configuration.commonDistDirectory == null) {\n    configuration.commonDistDirectory = \"dist\"\n  }\n  if (configuration.commonSourceDirectory == null) {\n    configuration.commonSourceDirectory = \"src/common\"\n  }\n  return configuration\n}\n"],"sourceRoot":""}
